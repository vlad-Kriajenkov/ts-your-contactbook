{"version":3,"sources":["components/CustomButton/CustomButton.tsx","components/index.ts","page/AuthNavigation/Registration/Registration.styled.tsx","page/AuthNavigation/Registration/Registration.tsx"],"names":["CustomButton","_ref","text","React","createElement","Button","type","variant","fullWidth","__webpack_require__","d","__webpack_exports__","CustomButton_CustomButton","FlexWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","ContainerForm","Container","_templateObject3","InputBox","Grid","_templateObject4","Registration","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","password","setPassword","_useState5","_useState6","email","setEmail","handelChange","e","_e$target","target","value","maxWidth","onSubmit","preventDefault","register","container","rowSpacing","columnSpacing","md","item","xs","TextField","id","label","required","onChange"],"mappings":"uHAOMA,EAA2B,SAAHC,GAAiB,IAAXC,EAAID,EAAJC,KAClC,OACEC,IAAAC,cAACC,IAAM,CAACC,KAAK,SAASC,QAAQ,YAAYC,WAAS,GAChDN,ICVPO,EAAAC,EAAAC,EAAA,sBAAAC,2HCGaC,EAAcC,IAAOC,IAAGC,MAAAC,YAAA,sFAKxBC,EAAQJ,IAAOK,GAAEC,MAAAH,YAAA,wHAQjBI,EAAgBP,YAAOQ,IAAPR,CAAiBS,MAAAN,YAAA,kKAUjCO,EAAWV,YAAOW,IAAPX,CAAYY,MAAAT,YAAA,2DCmErBU,UAhFU,WACvB,IAAMC,EAAWC,cAAiBC,EAEVC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAAAI,EACYL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAAAG,EACFT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAe,SAACC,GAAqC,IAAAC,EACjCD,EAAEE,OAAlBC,EAAKF,EAALE,MACR,OADmBF,EAAJZ,MAEb,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,WACH,OAAOT,EAAYS,GACrB,IAAK,QACH,OAAOL,EAASK,GAElB,QACE,SASN,OACE7C,IAAAC,cAACS,EAAW,KACVV,IAAAC,cAACiB,EAAa,CAAC4B,SAAS,MACtB9C,IAAAC,cAACc,EAAK,KAAC,gBACPf,IAAAC,cAAA,QAAM8C,SAVK,SAACL,GAChBA,EAAEM,iBAEFvB,EAASwB,YAAS,CAAClB,OAAMQ,QAAOJ,gBAQ1BnC,IAAAC,cAACoB,EAAQ,CAAC6B,WAAS,EAACC,WAAY,EAAGC,cAAe,CAAEC,GAAI,IACtDrD,IAAAC,cAACqB,IAAI,CAACgC,MAAI,EAACC,GAAI,GACbvD,IAAAC,cAACuD,IAAS,CACRC,GAAG,QACHtD,KAAK,QACLE,WAAS,EACTqD,MAAM,cACNtD,QAAQ,SACRuD,UAAQ,EACR5B,KAAK,QACLc,MAAON,EACPqB,SAAUnB,KAGdzC,IAAAC,cAACqB,IAAI,CAACgC,MAAI,EAACC,GAAI,GACbvD,IAAAC,cAACuD,IAAS,CACRC,GAAG,OACHtD,KAAK,OACLE,WAAS,EACTqD,MAAM,kBACNtD,QAAQ,SACRuD,UAAQ,EACR5B,KAAK,OACLc,MAAOd,EACP6B,SAAUnB,KAGdzC,IAAAC,cAACqB,IAAI,CAACgC,MAAI,EAACC,GAAI,IACbvD,IAAAC,cAACuD,IAAS,CACRC,GAAG,WACHtD,KAAK,WACLE,WAAS,EACTqD,MAAM,iBACNtD,QAAQ,SACRuD,UAAQ,EACR5B,KAAK,WACLc,MAAOV,EACPyB,SAAUnB,MAIhBzC,IAAAC,cAACJ,IAAY,CAACE,KAAM","file":"static/js/7.faaced24.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Button } from '@mui/material';\n\ninterface IButton  {\n  text: string;\n  \n};\nconst CustomButton:FC<IButton> = ({ text }) => {\n  return (\n    <Button type=\"submit\" variant=\"contained\" fullWidth>\n      {text} \n    </Button>\n  );\n};\n\nexport {CustomButton}","export * from './CustomButton'","import styled from '@emotion/styled';\nimport { Container, Grid } from '@mui/material';\n\nexport const FlexWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport const Title = styled.h1`\n  font-weight: 600;\n  font-size: 17px;\n  line-height: 120%;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const ContainerForm = styled(Container)`\n  height: fit-content;\n\n  background-color: #ffffff;\n  box-shadow: 0px 1px 4px rgba(126, 147, 255, 0.2);\n  border-radius: 8px;\n\n  padding: 40px;\n`;\n\nexport const InputBox = styled(Grid)`\n  margin-bottom: 20px;\n`;\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\n\nimport { Grid, TextField } from '@mui/material';\nimport {\n  Title,\n  ContainerForm,\n  InputBox,\n  FlexWrapper,\n} from './Registration.styled';\nimport { CustomButton } from '../../../components';\nimport { useAppDispatch } from '../../../redux/hook';\nimport { register } from '../../../redux/auth/auth-operation';\n\nconst Registration: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handelChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'password':\n        return setPassword(value);\n      case 'email':\n        return setEmail(value);\n\n      default:\n        return;\n    }\n  };\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    dispatch(register({name, email, password}))\n  };\n\n  return (\n    <FlexWrapper>\n      <ContainerForm maxWidth=\"xs\">\n        <Title>Registration</Title>\n        <form onSubmit={onSubmit}>\n          <InputBox container rowSpacing={2} columnSpacing={{ md: 2 }}>\n            <Grid item xs={6}>\n              <TextField\n                id=\"email\"\n                type=\"email\"\n                fullWidth\n                label=\"Enter email\"\n                variant=\"filled\"\n                required\n                name=\"email\"\n                value={email}\n                onChange={handelChange}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <TextField\n                id=\"name\"\n                type=\"text\"\n                fullWidth\n                label=\"Enter user name\"\n                variant=\"filled\"\n                required\n                name=\"name\"\n                value={name}\n                onChange={handelChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                fullWidth\n                label=\"Enter password\"\n                variant=\"filled\"\n                required\n                name=\"password\"\n                value={password}\n                onChange={handelChange}\n              />\n            </Grid>\n          </InputBox>\n          <CustomButton text={'Add contact'} />\n        </form>\n      </ContainerForm>\n    </FlexWrapper>\n  );\n};\n\nexport default Registration;\n"],"sourceRoot":""}
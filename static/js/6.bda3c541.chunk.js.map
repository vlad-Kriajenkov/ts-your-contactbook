{"version":3,"sources":["components/CustomButton/CustomButton.tsx","components/index.ts","page/AuthNavigation/Authorization/Authorization.styled.tsx","page/AuthNavigation/Authorization/Authorization.tsx"],"names":["CustomButton","_ref","text","React","createElement","Button","type","variant","fullWidth","__webpack_require__","d","__webpack_exports__","CustomButton_CustomButton","FlexWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","ContainerForm","Container","_templateObject3","InputBox","Grid","_templateObject4","Authorization","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","dispatch","useAppDispatch","handlerChange","e","_e$target","target","value","name","maxWidth","onSubmit","preventDefault","logIn","container","rowSpacing","columnSpacing","md","item","xs","TextField","id","label","required","onChange"],"mappings":"uHAOMA,EAA2B,SAAHC,GAAiB,IAAXC,EAAID,EAAJC,KAClC,OACEC,IAAAC,cAACC,IAAM,CAACC,KAAK,SAASC,QAAQ,YAAYC,WAAS,GAChDN,ICVPO,EAAAC,EAAAC,EAAA,sBAAAC,2HCGaC,EAAcC,IAAOC,IAAGC,MAAAC,YAAA,sFAKxBC,EAAQJ,IAAOK,GAAEC,MAAAH,YAAA,yHAQjBI,EAAgBP,YAAOQ,IAAPR,CAAiBS,MAAAN,YAAA,kKAUjCO,EAAWV,YAAOW,IAAPX,CAAYY,MAAAT,YAAA,2DCsDrBU,UApEW,WAAM,IAAAC,EACJC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAAAI,EACUL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAWC,cAIXC,EAAgB,SAACC,GAAqC,IAAAC,EAClCD,EAAEE,OAAlBC,EAAKF,EAALE,MACR,OADmBF,EAAJG,MAEb,IAAK,QACH,OAAOZ,EAASW,GAClB,IAAK,WACH,OAAOP,EAAYO,GAErB,QACE,SAUN,OACEzC,IAAAC,cAACS,EAAW,KACVV,IAAAC,cAACiB,EAAa,CAACyB,SAAS,MACtB3C,IAAAC,cAACc,EAAK,KAAC,iBACPf,IAAAC,cAAA,QAAM2C,SAXK,SAACN,GAChBA,EAAEO,iBAEFV,EAASW,YAAM,CAAEjB,QAAOI,cACxBH,EAAS,IACTI,EAAY,MAONlC,IAAAC,cAACoB,EAAQ,CAAC0B,WAAS,EAACC,WAAY,EAAGC,cAAe,CAAEC,GAAI,IACtDlD,IAAAC,cAACqB,IAAI,CAAC6B,MAAI,EAACC,GAAI,IACbpD,IAAAC,cAACoD,IAAS,CACRC,GAAG,QACHnD,KAAK,QACLE,WAAS,EACTkD,MAAM,cACNnD,QAAQ,SACRoD,UAAQ,EACRC,SAAUpB,EACVI,MAAOZ,EACPa,KAAK,WAIT1C,IAAAC,cAACqB,IAAI,CAAC6B,MAAI,EAACC,GAAI,IACbpD,IAAAC,cAACoD,IAAS,CACRC,GAAG,WACHnD,KAAK,WACLE,WAAS,EACTkD,MAAM,iBACNnD,QAAQ,SACRoD,UAAQ,EACRC,SAAUpB,EACVI,MAAOR,EACPS,KAAK,eAIX1C,IAAAC,cAACJ,IAAY,CAACE,KAAM","file":"static/js/6.bda3c541.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Button } from '@mui/material';\n\ninterface IButton  {\n  text: string;\n  \n};\nconst CustomButton:FC<IButton> = ({ text }) => {\n  return (\n    <Button type=\"submit\" variant=\"contained\" fullWidth>\n      {text} \n    </Button>\n  );\n};\n\nexport {CustomButton}","export * from './CustomButton'","import styled from '@emotion/styled';\nimport { Container, Grid } from '@mui/material';\n\nexport const FlexWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\nexport const Title = styled.h1` \n  font-weight: 600;\n  font-size: 17px;\n  line-height: 120%;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const ContainerForm = styled(Container)`\n  height: fit-content;\n\n  background-color: #ffffff;\n  box-shadow: 0px 1px 4px rgba(126, 147, 255, 0.2);\n  border-radius: 8px;\n\n  padding: 40px;\n`;\n\nexport const InputBox = styled(Grid)`\n  margin-bottom: 20px;\n`;\n","import React, { ChangeEvent, FC, FormEvent, useState } from 'react';\nimport { Grid, TextField } from '@mui/material';\nimport {\n  Title,\n  ContainerForm,\n  InputBox,\n  FlexWrapper,\n} from './Authorization.styled';\nimport { CustomButton } from '../../../components/index';\nimport { useAppDispatch } from '../../../redux/hook';\nimport { logIn } from '../../../redux/auth/auth-operation';\n\nconst Authorization: FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useAppDispatch();\n  \n\n\n  const handlerChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n\n      default:\n        return;\n    }\n  };\n  const onSubmit = (e: FormEvent) => {\n    e.preventDefault();\n\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <FlexWrapper>\n      <ContainerForm maxWidth=\"xs\">\n        <Title>Authorization</Title>\n        <form onSubmit={onSubmit}>\n          <InputBox container rowSpacing={2} columnSpacing={{ md: 2 }}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"email\"\n                type=\"email\"\n                fullWidth\n                label=\"Enter email\"\n                variant=\"filled\"\n                required\n                onChange={handlerChange}\n                value={email}\n                name=\"email\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                fullWidth\n                label=\"Enter password\"\n                variant=\"filled\"\n                required\n                onChange={handlerChange}\n                value={password}\n                name=\"password\"\n              />\n            </Grid>\n          </InputBox>\n          <CustomButton text={'Log in'} />\n        </form>\n      </ContainerForm>\n    </FlexWrapper>\n  );\n};\n\nexport default Authorization;\n"],"sourceRoot":""}